-- 1. Eliminar la tabla existente si es necesario (opcional, ten cuidado si ya tienes datos)
-- DROP TABLE IF EXISTS public.workers;

-- 2. Crear la tabla "workers"
CREATE TABLE IF NOT EXISTS public.workers (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre TEXT NOT NULL,
    cedula TEXT NOT NULL UNIQUE,
    cargo TEXT NOT NULL,
    turno TEXT NOT NULL,
    estado TEXT NOT NULL,
    telefono TEXT NOT NULL,
    documentos JSONB DEFAULT '[]'::jsonb, -- Cambiado de documento_url a documentos
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- 3. Habilitar Row Level Security (RLS) - ¡Importante para la seguridad!
ALTER TABLE public.workers ENABLE ROW LEVEL SECURITY;

-- 4. Crear políticas para permitir el acceso
-- Esta política permite a cualquier persona (anon) leer todos los datos.
CREATE POLICY "Allow public read access" ON public.workers
    FOR SELECT USING (true);

-- Esta política permite a cualquier persona (anon) insertar, actualizar y eliminar datos.
-- Para un entorno de producción, deberías restringir esto a usuarios autenticados.
CREATE POLICY "Allow all access for anon users" ON public.workers
    FOR ALL USING (true)
    WITH CHECK (true);

-- 5. Configurar Supabase Storage
-- NOTA: La creación del bucket debe hacerse desde el panel de Supabase.
-- Ve a Storage > Create a new bucket > Nombra el bucket "documentos_trabajadores" y hazlo público.

-- Políticas de acceso para el bucket 'documentos_trabajadores'
-- Permite acceso público de lectura a los archivos.
CREATE POLICY "Public Read Access" ON storage.objects
    FOR SELECT USING (bucket_id = 'documentos_trabajadores');

-- Permite a cualquier usuario subir archivos.
CREATE POLICY "Allow Upload" ON storage.objects
    FOR INSERT WITH CHECK (bucket_id = 'documentos_trabajadores');

-- Permite a cualquier usuario actualizar/borrar sus propios archivos (opcional, pero útil).
CREATE POLICY "Allow Update" ON storage.objects
    FOR UPDATE USING (bucket_id = 'documentos_trabajadores');

CREATE POLICY "Allow Delete" ON storage.objects
    FOR DELETE USING (bucket_id = 'documentos_trabajadores');
